name: 'Setup Project'
description: 'Setup the project'

inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.12'

outputs:
  pyproject_exists:
    description: 'Flag indicating whether pyproject.toml exists'
    value: ${{ steps.check_pyproject.outputs.exists }}

runs:
  using: 'composite'
  steps:
    - name: Set up task, uv, uvx and the venv
      shell: bash
      run: |
        make install

    - name: Render the project
      if: hashFiles('tests/resources/render.yml') != ''
      shell: bash
      run: |
        pip install copier

        # Render the current folder in-place
        copier copy . . \
          --data-file ./tests/resources/render.yml \
          --force \
          --overwrite \
          --quiet

        # Delete all remaining .jinja files
        find . -type f -name "*.jinja" -exec rm -f {} +

        # Delete all folders that still contain {{ ... }}
        find . -depth -type d -name "*{{*}}*" -exec rm -rf {} +

        ls -R

    - name: Check for pyproject.toml
      id: check_pyproject
      shell: bash
      run: |
        if [ -f "pyproject.toml" ]; then
          echo "exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "exists=false" >> "$GITHUB_OUTPUT"
        fi
